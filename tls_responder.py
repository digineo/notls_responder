#!/usr/bin/python3
import sys
import re
from email.parser import HeaderParser

def abort(reason):
    print("dropped, %s" % reason)
    # must exit with zero
    # otherwise the MTA retries the delivery
    sys.exit(0)

# aborts if the given header matches the given value
def abort_if_header(name, disallowed):
    value = orig_msg.get(name)
    if value != None and value.lower() in disallowed:
        abort("disallowed header: %s" % name);

# aborts if the given header exists and does NOT match the given value
def abort_if_header_not(name, disallowed):
    value = orig_msg.get(name)
    if value != None and value.lower() not in disallowed:
        abort("disallowed header: %s" % name);


# read and parse mail from STDIN
# FIXME only read the header from STDIN
parser    = HeaderParser()
orig_msg  = parser.parsestr(sys.stdin.read())

# read subject
orig_subject = orig_msg.get('Subject')
if not orig_subject:
    abort("subject missing");
if '\n' in orig_subject:
    abort("subject contains linbreaks");

# read sender
returnsender = orig_msg['Return-Path'] or orig_msg['From']

# https://www.iana.org/assignments/auto-submitted-keywords/auto-submitted-keywords.xhtml
abort_if_header_not('Auto-Submitted', 'no')

# check disallowed header values
abort_if_header('X-Autogenerated', 'reply')
abort_if_header('X-Auto-Response-Suppress', 'all')
abort_if_header('X-Mailer', 'mediawiki mailer')
abort_if_header('X-Spam-Flag', 'yes')
abort_if_header('Precedence', ['list', 'bulk', 'junk'])
abort_if_header('Content-Description', 'delivery report')


# check disallowed header fields
headers = [
    'List-Id',
    'List-Unsubscribe',
    'List-Help',
    'List-Info',
    'RT-Originator',
    'X-List',
    'X-List-ID',
    'X-MDMailing-List',
    'X-Mailing-List',
    'X-Mailer-ListID',
    'X-MailingID',
    'X-Mailing-Id',
    'X-Autoresponder',
    'X-Autorespond',
    'X-Bugzilla-Product',
    'X-Bugzilla-Type',
    'X-Email-Type-Id', # Paypal
    'X-Google-Address-Confirmation', # Google
    'X-Roundup-Version',
    'X-Trac-Version',
    'X-Whups-Generated',
    'X-Cron-Env',
]

for name in headers:
    if orig_msg.get(name) != None:
        abort("header present: %s" % name)


# check noreply and system addresses
noreplies = [
    "mailer-daemon",
    "noreply@",
    "no_reply@",
    "no-reply@",
    "do-not-reply@",
    "bounce@"
    "www@",
    "www-data@",
    "wwwrun@",
    "nobody@",
    "apache@",
    "root@",
    "nagios@",
    "httpd@",
    "hostmaster@",
    "postmaster@",
    "svn@",
]
sender_lower = returnsender.lower()
for noreply in noreplies:
    if noreply in sender_lower:
        abort("disallowed address")

# TODO
print("replied")
